#############################################################################
# Software Testing Automation Framework (STAF)                              #
# (C) Copyright IBM Corp. 2001, 2005, 2008                                  #
#                                                                           #
# This software is licensed under the Eclipse Public License (EPL) V1.0.    #
#############################################################################

LIB_STAFTCP = $(subst Name,STAFTCP,$(DLL))

staf_connprov_tcp_targets += $(REL)/lib/$(LIB_STAFTCP)

Targets += $(staf_connprov_tcp_targets) \
           $(REL)/bin/CAList.crt \
           $(REL)/bin/STAFDefault.crt \
           $(REL)/bin/STAFDefault.key

ifdef STAF_USE_SSL
    ifndef OPENSSL_ROOT
        $(error You must set OPENSSL_ROOT to the full pathname where you installed OpenSSL)
    endif

    ifeq ($(OS_NAME),win32)
        OPENSSL_LIBDIRS ?= $(OPENSSL_ROOT:/=)/bin
        SSL_LIB1 = ssleay32
        SSL_LIB2 = libeay32
        LIB_SSL_V = $(subst Name,$(SSL_LIB1),$(DLL))
        LIB_CRYPTO_V = $(subst Name,$(SSL_LIB2),$(DLL))
    else
        OPENSSL_LIBDIRS ?= $(OPENSSL_ROOT:/=)/lib
        SSL_LIB1 = ssl
        SSL_LIB2 = crypto
        
        # Determine the version used in the OpenSSL library names
        ifeq ($(OS_NAME),macosx)
            LIB_SSL_PART1 = $(OPENSSL_LIBDIRS)/lib$(SSL_LIB1).
            LIB_SSL_PART2 = $(subst $(LIB_SSL_PART1),,$(shell ls $(LIB_SSL_PART1)*.dylib))
            OPENSSL_VERSION ?= $(subst .dylib,,$(LIB_SSL_PART2))
            LIB_SSL_V = $(subst Name,$(SSL_LIB1).$(OPENSSL_VERSION),$(DLL))
            LIB_CRYPTO_V = $(subst Name,$(SSL_LIB2).$(OPENSSL_VERSION),$(DLL))
        else
            LIB_SSL_PART1 = $(OPENSSL_LIBDIRS)/$(subst Name,$(SSL_LIB1),$(DLL)).
            OPENSSL_VERSION ?= $(subst $(LIB_SSL_PART1),,$(shell ls $(LIB_SSL_PART1)*))
            LIB_SSL_V = $(subst Name,$(SSL_LIB1),$(DLL)).$(OPENSSL_VERSION)
            LIB_CRYPTO_V = $(subst Name,$(SSL_LIB2),$(DLL)).$(OPENSSL_VERSION)
        endif
    endif

    # Verify that the two OpenSSL libraries required exist
    ifneq ($(OPENSSL_LIBDIRS)/$(LIB_SSL_V), $(shell find $(OPENSSL_LIBDIRS)/$(LIB_SSL_V) -print))
        $(info find $(OPENSSL_LIBDIRS)/$(LIB_SSL_V) -print)
        $(error Could not find file $(LIB_SSL_V) in directory $(OPENSSL_LIBDIRS).\
          Check your settings for OPENSSL_ROOT, OPENSSL_VERSION, and STAF_USE_SSL.\
          You may also have to set OPENSSL_LIBDIRS to the directory containing file $(LIB_SSL_V).)  
    endif
    ifneq ($(OPENSSL_LIBDIRS)/$(LIB_CRYPTO_V), $(shell find $(OPENSSL_LIBDIRS)/$(LIB_CRYPTO_V) -print))
        $(info find $(OPENSSL_LIBDIRS)/$(LIB_CRYPTO_V) -print)
        $(error Could not find file $(LIB_CRYPTO_V) in directory $(OPENSSL_LIBDIRS).\
          Check your settings for OPENSSL_ROOT, OPENSSL_VERSION, and STAF_USE_SSL.\
          You may also have to set OPENSSL_LIBDIRS to the directory containing file $(LIB_CRYPTO_V).)
    endif
    
    ifneq ($(filter aix aix64,$(OS_NAME)),)
        # On aix and aix64, don't include the version number in the OpenSSL library names shipped with STAF
        LIB_SSL = $(subst Name,$(SSL_LIB1),$(DLL))
        LIB_CRYPTO = $(subst Name,$(SSL_LIB2),$(DLL))
    else
        LIB_SSL = $(LIB_SSL_V)
        LIB_CRYPTO = $(LIB_CRYPTO_V)
    endif

    OPENSSL_INCLUDEDIRS ?= $(OPENSSL_ROOT:/=)/include
endif           

CleanupTargets += cleanup_staf_connprov_tcp

$(staf_connprov_tcp_targets): SUBSYS_REL := connproviders/tcp 
SUBSYS_REL := connproviders/tcp

#=====================================================================
#   C/C++ Info Flags
#=====================================================================
ifdef STAF_USE_IPV6
    CC_CFLAGS += -DSTAF_USE_IPV6 
endif
ifdef STAF_USE_SSL
    CC_CFLAGS += -DSTAF_USE_SSL 
endif

$(staf_connprov_tcp_targets): LIBS = STAF $(OS_SOCKET_LIB)
$(staf_connprov_tcp_targets): CFLAGS := $(CC_EXPORT_SHARED_LIB_SYMBOLS)
$(REL)/lib/$(LIB_STAFTCP)   : OBJS = $(staf_connprov_tcp_objs)
ifdef STAF_USE_SSL
    $(staf_connprov_tcp_targets): INCLUDEDIRS := $(OPENSSL_INCLUDEDIRS)
endif

staf_connprov_tcp_objs :=\
  STAFTCPConnProvider

staf_connprov_tcp_objs := $(foreach obj,$(staf_connprov_tcp_objs),$(O)/connproviders/tcp/$(obj)$(OS_OE))
staf_connprov_tcp_dependents := $(staf_connprov_tcp_objs:$(OS_OE)=.d)

ifeq ($(OS_NAME),win32)
    ifdef STAF_USE_IPV6
        $(staf_connprov_tcp_targets): CC_INCLUDEDIRS := $(MSSDKDIR)\INCLUDE + $(CC_INCLUDEDIRS)
	ifneq ($(CC_TYPE),MVC-SDK-IA64)
        	$(staf_connprov_tcp_targets): CC_LIBDIRS := $(MSSDKDIR)\LIB + $(CC_LIBDIRS)
        endif
    endif
    staf_connprov_tcp_objs += $(SR_SRC)/STAFTCP.def
    $(staf_connprov_tcp_targets): LIBS = STAF $(OS_SOCKET_LIB) WS2_32 $(if $(STAF_USE_SSL),$(SSL_LIB1) $(SSL_LIB2))
else
    $(staf_connprov_tcp_targets): LIBS = STAF $(OS_SOCKET_LIB) $(if $(STAF_USE_SSL),$(SSL_LIB1) $(SSL_LIB2))
endif

ifdef STAF_USE_SSL
    LIBDIRS += $(OPENSSL_ROOT)/lib
    CC_INCLUDEDIRS += $(OPENSSL_INCLUDEDIRS)
endif

# Include dependencies
ifneq ($(InCleanup), "1")
    include $(staf_connprov_tcp_dependents)
endif

# Include inference rules
include $(InferenceRules)

# STAF TCP connection provider targets

$(REL)/lib/$(LIB_STAFTCP): $(staf_connprov_tcp_objs) $(LIB_STAF_FP) $(MAKEFILE_NAME)
	$(SHARED_LIB_IT)

$(REL)/bin/CAList.crt: $(SRC)/$(SUBSYS_REL)/CAList.crt
	$(COPY_FILE)

$(REL)/bin/STAFDefault.crt: $(SRC)/$(SUBSYS_REL)/STAFDefault.crt
	$(COPY_FILE)

$(REL)/bin/STAFDefault.key: $(SRC)/$(SUBSYS_REL)/STAFDefault.key
	$(COPY_FILE)

cleanup_staf_connprov_tcp:
	-@$(DEL) $(O)/connproviders/tcp/* $(OUT_ERR_TO_DEV_NULL)
	-@$(DEL) $(REL)/lib/$(LIB_STAFTCP) $(OUT_ERR_TO_DEV_NULL)
