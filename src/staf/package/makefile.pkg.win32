#############################################################################
# Software Testing Automation Framework (STAF)                              #
# (C) Copyright IBM Corp. 2001                                              #
#                                                                           #
# This software is licensed under the Eclipse Public License (EPL) V1.0.    #
#############################################################################

Pkg_Targets += \
  $(PKG)/LICENSE.htm \
  $(PKG)/NOTICES.htm \
  $(PKG)/install.properties \
  $(PKG)/bin/STAFProc.exe \
  $(PKG)/bin/STAF.exe \
  $(PKG)/bin/FmtLog.exe \
  $(PKG)/bin/STAFReg.exe \
  $(PKG)/bin/STAFLoop.exe \
  $(PKG)/bin/STAFExecProxy.exe \
  $(PKG)/bin/JSTAF.zip \
  $(PKG)/bin/JSTAF.jar \
  $(PKG)/bin/STAFAnt.jar \
  $(PKG)/bin/STAFHTTPSLS.jar \
  $(PKG)/bin/STAF.cfg \
  $(PKG)/bin/STAFProc.ico \
  $(PKG)/bin/STAF.dll \
  $(PKG)/bin/STAFLIPC.dll \
  $(PKG)/bin/STAFTCP.dll \
  $(PKG)/bin/JSTAF.dll \
  $(PKG)/bin/JSTAFSH.dll \
  $(PKG)/bin/STAFDSLS.dll \
  $(PKG)/bin/STAFMon.dll \
  $(PKG)/bin/STAFLog.dll \
  $(PKG)/bin/STAFPool.dll \
  $(PKG)/bin/STAFZip.dll \
  $(PKG)/bin/STAFZlib.dll \
  $(PKG)/bin/STAFEXECPROXY.dll \
  $(PKG)/bin/IPv4/STAF.dll \
  $(PKG)/bin/IPv4/STAFTCP.dll \
  $(PKG)/bin/IPv6/STAF.dll \
  $(PKG)/bin/IPv6/STAFTCP.dll \
  $(PKG)/bin/PySTAF.py \
  $(PKG)/bin/PySTAFv3.py \
  $(PKG)/bin/PySTAFLog.py \
  $(PKG)/bin/PySTAFMon.py \
  $(PKG)/bin/python25/PYSTAF.pyd \
  $(PKG)/lib/STAF.lib \
  $(PKG)/lib/service.def \
  $(PKG)/docs/History \
  $(PKG)/docs/STAFCMDS.htm \
  $(PKG)/docs/STAFFAQ.htm \
  $(PKG)/docs/STAFGS.pdf \
  $(PKG)/docs/STAFInstall.pdf \
  $(PKG)/docs/STAFRC.htm \
  $(PKG)/docs/STAFUG.htm \
  $(PKG)/docs/STAFHome.htm \
  $(PKG)/docs/STAFPerl.htm \
  $(PKG)/docs/STAFDiag.htm \
  $(PKG)/include/STAF.h \
  $(PKG)/include/STAFInlImpl.cpp \
  $(PKG)/include/STAFCommandParser.h \
  $(PKG)/include/STAFCommandParserInlImpl.cpp \
  $(PKG)/include/STAFDataTypes.h \
  $(PKG)/include/STAFDataTypesInlImpl.cpp \
  $(PKG)/include/STAFDynamicLibrary.h \
  $(PKG)/include/STAFDynamicLibraryInlImpl.cpp \
  $(PKG)/include/STAFError.h \
  $(PKG)/include/STAFFileSystem.h \
  $(PKG)/include/STAFFileSystemInlImpl.cpp \
  $(PKG)/include/STAFEventSem.h \
  $(PKG)/include/STAFEventSemInlImpl.cpp \
  $(PKG)/include/STAFException.h \
  $(PKG)/include/STAFLogService.h \
  $(PKG)/include/STAFMonitorService.h \
  $(PKG)/include/STAFMutexSem.h \
  $(PKG)/include/STAFMutexSemInlImpl.cpp \
  $(PKG)/include/STAFOSTypes.h \
  $(PKG)/include/STAFRefPtr.h \
  $(PKG)/include/STAFResPoolService.h \
  $(PKG)/include/STAFServiceInterface.h \
  $(PKG)/include/STAFString.h \
  $(PKG)/include/STAFStringInlImpl.cpp \
  $(PKG)/include/STAFThread.h \
  $(PKG)/include/STAFTimestamp.h \
  $(PKG)/include/STAFTimestampInlImpl.cpp \
  $(PKG)/include/STAFUtil.h \
  $(PKG)/include/STAF_fstream.h \
  $(PKG)/include/STAF_iostream.h \
  $(PKG)/include/STAFProcess.h \
  $(PKG)/include/STAFProcessInlImpl.cpp \
  $(PKG)/include/STAFTrace.h \
  $(PKG)/include/STAFTraceInlImpl.cpp \
  $(PKG)/samples/c/LogIt.c \
  $(PKG)/samples/cpp/LogIt.cpp \
  $(PKG)/samples/demo/STAFDemoController.java \
  $(PKG)/samples/demo/STAFProcess.java \
  $(PKG)/samples/demo/STAFDemo.jar \
  $(PKG)/samples/java/JPing.java \
  $(PKG)/codepage/alias.txt \
  $(subst $(SRC),$(PKG),$(subst ucm,bin,$(shell find $(SRC) -name "*.ucm")))

ifneq ($(CC_TYPE),MVC8-X64)
Pkg_Targets += \
  $(PKG)/bin/python24/PYSTAF.pyd
endif

ifneq ($(CC_TYPE),MVC-SDK-IA64)
Pkg_Targets += \
  $(PKG)/bin/PLSTAF.pm \
  $(PKG)/bin/PLSTAFService.pm \
  $(PKG)/bin/STAF.pl \
  $(PKG)/bin/STAF2.pl \
  $(PKG)/bin/STAFMon.pm \
  $(PKG)/bin/STAFLog.pm \
  $(PKG)/lib/perl58/PLSTAF.dll \
  $(PKG)/lib/perl510/PLSTAF.dll \
  $(PKG)/lib/perl512/PLSTAF.dll \
  $(PKG)/lib/perl514/PLSTAF.dll \
  $(PKG)/bin/python26/PYSTAF.pyd \
  $(PKG)/bin/python27/PYSTAF.pyd \
  $(PKG)/bin/python30/PYSTAF.pyd \
  $(PKG)/bin/python31/PYSTAF.pyd \
  $(PKG)/bin/STAF.tcl \
  $(PKG)/bin/tcl85/TCLSTAF.dll \
  $(PKG)/bin/tcl86/TCLSTAF.dll \
  $(PKG)/bin/STAFUtil.tcl \
  $(PKG)/bin/STAFMon.tcl \
  $(PKG)/bin/STAFLog.tcl \
  $(PKG)/bin/pkgIndex.tcl
ifneq ($(CC_TYPE),MVC8-X64)
Pkg_Targets += \
  $(PKG)/bin/GenWL.cmd \
  $(PKG)/bin/RXSTAF.dll \
  $(PKG)/bin/RxThread.dll \
  $(PKG)/lib/perl56/PLSTAF.dll \
  $(PKG)/bin/tcl83/TCLSTAF.dll \
  $(PKG)/bin/tcl84/TCLSTAF.dll \
  $(PKG)/bin/python22/PYSTAF.pyd \
  $(PKG)/bin/python23/PYSTAF.pyd \
  $(PKG)/lib/STAFUtil.rxl \
  $(PKG)/lib/STAFCPar.rxl \
  $(PKG)/lib/STAFPool.rxl \
  $(PKG)/lib/STAFMon.rxl \
  $(PKG)/lib/STAFLog.rxl \
  $(PKG)/samples/genwl/Sample.gwl \
  $(PKG)/samples/misc/OldVars.cfg \
  $(PKG)/samples/rexx/PingTest.cmd \
  $(PKG)/samples/rexx/Sample1.cmd \
  $(PKG)/samples/rexx/Sample2.cmd \
  $(PKG)/samples/rexx/Sample3.cmd \
  $(PKG)/samples/rexx/Sample4.cmd
endif
endif

ifdef STAF_USE_SSL
Pkg_Targets += \
  $(PKG)/bin/ssleay32.dll \
  $(PKG)/bin/libeay32.dll \
  $(PKG)/bin/STAFDefault.crt \
  $(PKG)/bin/STAFDefault.key \
  $(PKG)/bin/CAList.crt
  
ifeq ($(CC_TYPE),MVC8-X64)
Pkg_Targets += \
  $(PKG)/vcredist_x64.exe
endif
endif

Targets += $(Pkg_Targets) \
           $(PKG_ROOT)/stafpkg_$(OS_NAME).tar

CleanupTargets += Pkg_cleanup

# Standard inference rule for copying files from REL tree to PKG tree

$(PKG)/%: $(REL)/%
	$(COPY_FILE)

# Special rule for copying files from REL/docs/staf tree to PKG/docs

$(PKG)/docs/STAFUG.html: $(REL)/docs/staf/STAFUG.html
	-@$(DEL) -Rf $(PKG)/docs $(OUT_ERR_TO_DEV_NULL)

$(PKG)/docs/%: $(REL)/docs/staf/%
	$(COPY_FILE)

# Special rule for Win32 for copying files from REL/lib tree to PKG/bin

$(PKG)/bin/%: $(REL)/lib/%
	$(COPY_FILE)

# Special rule for Windows AMD64 for copying file vcredist_x64.exe from
# the tools/MVC8-Runtime directory to PKG tree

ifdef STAF_USE_SSL
ifeq ($(CC_TYPE),MVC8-X64)
# The TCP connection provider built using SSL on WIndows AMD64 requires
# the MS Visual 2005 Runtime Libraries provided by installing vcredist_x64.exe

$(PKG)/vcredist_x64.exe: /cygdrive/$(DRIVE)/tools/MVC8-Runtime/vcredist_x64.exe
	$(COPY_FILE)
endif
endif        
        
$(PKG_ROOT)/stafpkg_$(OS_NAME).tar: $(Pkg_Targets)
	@echo "*** Creating $(@F) ***"
	-@$(DEL) $@ $(OUT_ERR_TO_DEV_NULL)
	@cd $(PKG_ROOT); tar cf $@ *

Pkg_cleanup:
	-@$(DEL) -Rf $(PKG) $(OUT_ERR_TO_DEV_NULL)
